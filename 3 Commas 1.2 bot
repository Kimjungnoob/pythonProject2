# Import necessary libraries
import ccxt
import time

# Define the symbol and parameters
symbol = 'BTC/USDT'  # Trading pair
base_order_amount = 1.0  # $1 base order amount
price_deviation = 0.015  # 1.5% price deviation
volume_scale = 1.2  # 1.2% volume scale over the base order

# Get the current price (replace with actual API call)
def get_current_price():
    # This is a placeholder function to simulate getting the current price
    # Replace this with your actual API call to get the current price of the trading pair
    return random.uniform(30000, 35000)  # Random price within a range

# Main trading loop
def trading_loop():
    while True:
        current_price = get_current_price()
        print(f"Current Price: {current_price}")

        # Check if the price has dropped by 1.5%
        target_price = current_price - (current_price * price_deviation)
        if current_price <= target_price:
            # Calculate the volume for the buy order
            buy_order_volume = base_order_amount * volume_scale

            # Execute the buy order at the current price
            print(f"Buying {buy_order_volume} of {symbol} at {current_price} per unit.")

            # Add your code to execute the buy order using your trading platform or API

        # Add any additional logic or conditions for the loop exit or other actions

# Start the trading loop
trading_loop()

